log_format   main '$remote_addr - $remote_user [$time_local]  $status '
'"$request" $body_bytes_sent "$http_referer" '
'"$http_user_agent" "$http_x_forwarded_for"';
access_log /dev/stdout main;

server {
  listen 32080 default;
  client_max_body_size 108M;
  server_name alexos.dev;

  root /app;
  index index.html;
  proxy_set_header Host $http_host;

  # the "via google 1.1 header" turns off default compression. Switch back on!
  gzip on;
  gzip_proxied any;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

  # race timeout to avoid race condition with GCP's load balancers
  keepalive_timeout 650;
  keepalive_requests 10000;

  error_page 404 /404.html;
  error_page 500 502 503 504 /50x.html;
  location = /50x.html {
    root /var/lib/nginx/html;
  }

  proxy_cache_valid 200 302 10m;
  proxy_cache_valid 404      1m;

  location ^~ /categories {
      rewrite ^/categories/?(.*)$ $scheme://$server_name/tags/$1 permanent;
  }

  location / {
    proxy_cache_bypass $cookie_application_cookie;
    # Add slashes to non-file-extension requests - $server_name specified to avoid port mapping issue
    rewrite ^/([^.]*[^/])$ $scheme://$server_name/$1/ permanent;
  }
  
  # catch other hostnames we've sent to this site, redirecting them to desired host
  # Warning: if's in nginx are evil!
  if ($host != $server_name) {
      rewrite ^/(.*) $scheme://$server_name/$1 permanent;
  }

  location = /js/visits.js {
      proxy_pass https://plausible.alexos.dev/js/plausible.outbound-links.js;
      proxy_buffering on;

      # Cache the script for 6 hours, as long as plausible returns a valid response
      proxy_cache jscache;
      proxy_cache_valid 200 6h;
      proxy_cache_use_stale updating error timeout invalid_header http_500;
      add_header X-Cache $upstream_cache_status;

      proxy_set_header Host plausible.alexos.dev;
      proxy_ssl_name plausible.alexos.dev;
      proxy_ssl_server_name on;
      proxy_ssl_session_reuse off;
  }

  # proxy to plausible API - my self-hosted copy
  location = /api/event {
      proxy_pass https://plausible.alexos.dev/api/event;
      proxy_buffering on;
      proxy_http_version 1.1;
      
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header X-Forwarded-Host  $host;

      proxy_set_header Host plausible.alexos.dev;
      proxy_ssl_name plausible.alexos.dev;
      proxy_ssl_server_name on;
      proxy_ssl_session_reuse off;
  }
  
}
